with connections_base as(
select --*
     try_cast(pf.shopper_id as integer) as driver_id,
     try_cast(pf.member_id as integer) as customer_id
   , d.metro_id, m.name as metro_name
   ,array_construct(shopper_id::integer, member_id::integer) as combo
   ,coalesce(member_removed_at, shopper_removed_at) as removed_at
   ,case when removed_at is not null then 'removed'
    when (accepted_at is not null and removed_at is null) then 'accepted'
    when (ignored_at is not null and removed_at is null) then 'ignored'
    when shopper_notification_sent_at is not null then 'notified'
   end as current_status
   ,pf.updated_at   
   ,shopper_notification_sent_at as notified_at,
   pf.accepted_at,
   ignored_at,
   member_removed_at,
   shopper_removed_at
  from ng_views.pairings_favorites pf
  join og_views.drivers d on try_cast(pf.shopper_id as integer) = d.id  --- driver s table
  join og_views.customers c on pf.member_id = c.id
  join og_views.metros m on d.metro_id = m.id
  where d.deactivated_at is null
    and current_status = 'accepted'
    and c.deleted_at is null
  order by 2,1,4)
  ---select * from connections_base;


,shoppers as (
select d.id as shopper_id
    from og_views.drivers d
    join og_views.orders o
    on d.id = o.driver_id
where o.is_external_platform_order = 'false'
    and o.partner_id is null
    and d.deactivated_at is null
    )
---select * from shoppers
    

, pmshoppers as (
select count(distinct(cb.driver_id)) as pmshoppers, count(distinct(s.shopper_id)) as shoppers, pmshoppers/shoppers as percent_preferred
    from shoppers s
left join connections_base cb
    on s.shopper_id = cb.driver_id
left join og_views.orders o
    on s.shopper_id = o.driver_id
---where o.is_external_platform_order = 'false'
    ---and o.partner_id is null
    where o.delivered_at >= '1/1/2022'
    )
    
select * from pmshoppers;
